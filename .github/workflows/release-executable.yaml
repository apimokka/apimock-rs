name: Executable

on:
  release:
    types: [created]

permissions:
  contents: write

defaults:
  run:
    shell: bash

env:
  PRODUCT_BASENAME: apimock
  TAG: ${{ github.ref_name }}            # tag or branch name

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - name: Linux-aarch64-musl
            target: aarch64-unknown-linux-musl
            os: ubuntu-latest
            bin-ext:
          - name: Linux-x64-gnu
            target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            bin-ext:
          - name: Linux-x64-musl
            target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            bin-ext:
          - name: macOS-aarch64
            target: aarch64-apple-darwin
            os: macos-latest
            bin-ext:
          - name: Windows-x64
            target: x86_64-pc-windows-msvc
            os: windows-latest
            bin-ext: .exe

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # [ build ]
      - name: Install Rust
        run: bash .github/workflows/scripts/install-rust.sh stable ${{ matrix.target }}
      
      - name: Cache cargo dependencies and build
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build Rust executable
        run: |
          cargo build --release --target ${{ matrix.target }} --bin ${{ env.PRODUCT_BASENAME }} --locked
      
      # [ artifact passed to next workflow(s) ]
      - name: Upload built binary (Linux, macOS)
        if: matrix.target != 'x86_64-pc-windows-msvc'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PRODUCT_BASENAME }}-${{ matrix.name }}-${{ env.TAG }}
          path: target/${{ matrix.target }}/release/${{ env.PRODUCT_BASENAME }}${{ matrix.bin-ext }}
            
      # [ release asset ]
      - name: Update release with new asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ github.ref_name }} target/${{ matrix.target }}/release/${{ env.PRODUCT_BASENAME }}${{ matrix.bin-ext }}
        